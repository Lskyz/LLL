on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  buidJob:
    name: buid
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@main
        with:
          submodules: recursive
#      https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md#xcode
      - name: Set up Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
          xcode-select -p
          xcodebuild -version
      - name: Build macOS
        run: swift build
      - name: Build iOS
        run: swift build --sdk `xcrun -sdk iphonesimulator -show-sdk-path` -Xswiftc -target -Xswiftc x86_64-apple-ios13.0-simulator
      - name: Build tvOS
        run: swift build --sdk `xcrun -sdk appletvsimulator -show-sdk-path` -Xswiftc -target -Xswiftc x86_64-apple-tvos13.0-simulator
      - name: Build xrOS
        run: swift build --sdk `xcrun -sdk xrsimulator -show-sdk-path` -Xswiftc -target -Xswiftc x86_64-apple-xros1.0-simulator
      - name: Test
        run: swift test -v
      - name: 📦 Build iOS Archive and Extract IPA
        run: |
          # LLL/Demo/SwiftUI/Player.xcodeproj 사용
          PROJECT_FILE="LLL/Demo/SwiftUI/Player.xcodeproj"
          
          if [ ! -d "$PROJECT_FILE" ]; then
            echo "❌ LLL/Demo/SwiftUI/Player.xcodeproj를 찾을 수 없습니다"
            exit 1
          fi
          
          # 스킴 목록 확인 후 첫 번째 스킴 사용
          SCHEME=$(xcodebuild -project "$PROJECT_FILE" -list | grep -A 100 "Schemes:" | grep -v "Schemes:" | head -1 | xargs)
          
          if [ -z "$SCHEME" ]; then
            echo "❌ 스킴을 찾을 수 없습니다"
            exit 1
          fi
          
          echo "📱 Building scheme: $SCHEME"
          
          # 아카이브 생성
          xcodebuild -project "$PROJECT_FILE" \
            -scheme "$SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/app.xcarchive \
            archive \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
          
          # IPA 추출
          rm -rf Payload build/ipa
          mkdir -p build/ipa Payload
          
          APP_NAME=$(find build/app.xcarchive/Products/Applications -name "*.app" | head -1 | xargs basename)
          
          if [ -z "$APP_NAME" ]; then
            echo "❌ 앱 파일을 찾을 수 없습니다"
            exit 1
          fi
          
          cp -r "build/app.xcarchive/Products/Applications/$APP_NAME" Payload/
          find "Payload/$APP_NAME" -type f -perm +111 -exec chmod +x {} \;
          chmod -R 755 "Payload/$APP_NAME"
          
          zip -r "build/ipa/${APP_NAME%.app}.ipa" Payload
          ls -lh build/ipa/*.ipa
      - name: ☁️ Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ipa/*.ipa
